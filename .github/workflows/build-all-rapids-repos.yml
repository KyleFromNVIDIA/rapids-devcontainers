name: Build all RAPIDS repositories

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_call:

jobs:
  check-event:
    name: Check GH Event
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.check_gh_event.outputs.ok }}
    steps:
      - id: check_gh_event
        name: Check GH Event
        shell: bash
        run: |
          [[ '${{ github.event_name }}' == 'push' && '${{ github.repository }}' == 'rapidsai/devcontainers' ]] || \
          [[ '${{ github.event_name }}' == 'schedule' && '${{ github.repository }}' == 'rapidsai/devcontainers' ]] || \
          [[ '${{ github.event_name }}' == 'pull_request' && '${{ github.repository }}' != 'rapidsai/devcontainers' ]] \
          && echo "ok=true"  | tee -a $GITHUB_OUTPUT \
          || echo "ok=false" | tee -a $GITHUB_OUTPUT;

  build-all-rapids-repos:
    name: Build all RAPIDS repos
    if: needs.check-event.outputs.ok == 'true'
    needs: check-event
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/build-in-devcontainer.yaml@branch-24.06
    with:
      arch: '["amd64"]'
      cuda: '["12.0", "12.2"]'
      node_type: cpu32
      extra-repo-deploy-key: CUMLPRIMS_SSH_PRIVATE_DEPLOY_KEY
      extra-repo-deploy-key-2: CUGRAPH_OPS_SSH_PRIVATE_DEPLOY_KEY
      build_command: |
        sccache -z;
        sccache --show-adv-stats;
        # Need Python 3.11 for the buffer protocol in the limited API
        export PYTHON_VERSION="3.11"
        clone-all -j$(nproc) -v -q --clone-upstream --single-branch --shallow-submodules --no-update-env;
        rapids-generate-scripts
        . rapids-make-${PYTHON_PACKAGE_MANAGER}-env
        # The latest version of this branch includes both my patches (required
        # for RAPIDS Cython usage to work) and upstream patches required for
        # Cython itself to work under the limited API.
        export NO_CYTHON_COMPILE=true
        python -m pip install git+https://github.com/cython/cython.git@limited-api-preview
        # Need to install my branch of scikit-build-core for the way I'm specifying CMAKE_CXX_FLAGS via CMAKE_ARGS to work
        python -m pip install git+https://github.com/vyasr/scikit-build-core.git@fix/cmake_args_quoted_spaces

        # Point to the rmm branch with the fixes
        git -C ~/rmm remote add vyasr https://github.com/vyasr/rmm.git
        git -C ~/rmm fetch vyasr
        git -C ~/rmm checkout feat/py_limited_api_compat

        build-all \
          -v \
          -j$(nproc --ignore=1) \
          -DBUILD_TESTS=ON \
          -DBUILD_BENCHMARKS=ON \
          -DBUILD_ANN_BENCH=ON \
          -DBUILD_PRIMS_BENCH=ON \
          -DBUILD_SHARED_LIBS=ON \
          ;
        sccache --show-adv-stats;
